#!/usr/bin/python
# Filename: main.mi2app
# demo-MM-online

import os
import sys
import shutil
import traceback

import mi2app_utils
from mobile_insight.monitor import OnlineMonitor, OfflineReplayer

# from mobile_insight.analyzer import LteNasAnalyzer, LteRrcAnalyzer, UmtsNasAnalyzer, 
from mobile_insight.analyzer import LteRrcAnalyzer, WcdmaRrcAnalyzer

from lte_nas_analyzer import LteNasAnalyzer
# from lte_rrc_analyzer import LteRrcAnalyzer
from umts_nas_analyzer import UmtsNasAnalyzer
# from wcdma_rrc_analyzer import WcdmaRrcAnalyzer

try:
    cache_directory = mi2app_utils.get_cache_dir()
    log_directory = os.path.join(cache_directory, "mi2log")
    mi_directory = mi2app_utils.get_mobile_insight_path()

    # src = OnlineMonitor()
    # src.set_skip_decoding(False)
    # src.set_log_directory(log_directory)
    # src.set_log_cut_size(1000.0)

    src = OfflineReplayer()

    # Combined log
    src.set_input_path(os.path.join(mi_directory, "demo/misc/offline_log_example.mi2log"))

    # 3G RRC
    # src.set_input_path(
    #    os.path.join(mi_directory, "Demo-Visualization-logs/WCDMA_RRC_state_sample.mi2log"))

    # 4G RRC
    # src.set_input_path(os.path.join(mi_directory,"demo/RRCStateMachine/LTE_RRC_state_sample.mi2log"))

    # 3G MM
    # src.set_input_path(os.path.join(mi_directory, "log/diag_log_20161128_220607_351881062060429_samsung-SM-G900T_CT-Mobile.mi2log"))


    # 4G ESM
    # src.set_input_path(os.path.join(mi_directory, "log/diag_log_20161030_211153_351881062060429_samsung-SM-G900T_CT-Mobile.mi2log"))

    # 4G EMM / 3G GMM
    # src.set_input_path(os.path.join(mi_directory,"Demo-Visualization-logs/offline_log_example.mi2log"))

    # src.set_input_path(os.path.join(mi_directory,"demo/NASStateMachine/LTE_NAS_state_sample.mi2log"))

    lte_nas_analyzer = LteNasAnalyzer()
    lte_nas_analyzer.set_source(src)

    umts_nas_analyzer = UmtsNasAnalyzer()
    umts_nas_analyzer.set_source(src)

    lte_rrc_analyzer = LteRrcAnalyzer()
    lte_rrc_analyzer.set_source(src)

    wcdma_rrc_analyzer = WcdmaRrcAnalyzer()
    wcdma_rrc_analyzer.set_source(src)

    src.run()

except:
    # src.log_error(traceback.format_exc())
    print traceback.format_exc()

    # finally:
    # mi2app_utils.detach_thread()
    pass